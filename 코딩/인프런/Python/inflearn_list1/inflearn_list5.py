# 인덱싱: 리스트에서 하나의 요소를 인덱스를 통해 참조
li = ['안녕', '신은혁', 10, 100, -10]
print(li[2])


# 음수 인덱스는 뒤에서부터 계산. 시작값은 -1.
# 아래 두 코드는 동일.
print(li[-2])
print(li[-2 + len(li)])


# 슬라이싱: 리스트 범위 내에서 범위를 지정해 원하는 요소 추출
print('---------------------------------------')
li1 = ['안녕', '신은혁', 10, 100, -10, False, True]


# 인덱스의 값을 통해 부분 리스트 새로 만듦 = 주소값이 다르다.
s_li1 = li1[2:6]
print("s_li1: ", s_li1)

print("li1의 주소값: ", id(li1))
print("s_li1의 주소값: ", id(s_li1))


# 슬라이싱 연산시 앞 인덱스 생략되면 0부터 시작
print('---------------------------------------')
s_li2 = li1[:6]
print("s_li2: ", s_li2)
print("s_li2의 주소값: ", id(s_li2))

# 슬라이싱 연산시 뒤 인덱스 생략되면 끝까지
print('---------------------------------------')
s_li3 = li1[1:]
print("s_li3: ", s_li3)
print("s_li3의 주소값: ", id(s_li3))

# 슬라이싱 연산시 앞,뒤 인덱스 생략되면 리스트 전체 출력
print('---------------------------------------')
print(li1[:])

# 슬라이싱 통해 값 변경
# 하나의 리스트로 변경하기 때문에 주소값의 변화는 없다.
print('---------------------------------------')
words = ['a', 'b', 'c', 'd', 'e']
print(words)
print("words의 주소값: ", id(words))

words[1:3] = ['B', 'C', 'D']
print(words)
print("words의 주소값: ", id(words))

# 아래 코드는 리스트의 요소를 전부 삭제.
words = [] # [:] 꼴로 범위를 지정하지 않으면 새로운 리스트를 할당하는 것이라 주소값이 변경됨.
print(words)
print("words의 주소값: ", id(words))
